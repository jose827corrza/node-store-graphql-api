scalar CategoryNameType

type Query {
    hello: String
    #  Products
    product(id: ID!): Product
    allProducts: [Product!]! # No retorne nulos ni que hayan nulos en la lista
    allCategories: [Category!]!
    categoryById(id: ID!): Category
  }
"This is the product data shape of platzi store, we can specify as much as we want . . . "
type Product {
  "Auto generated Id"
  id: ID!
  "Name of the product"
  name:String!
  "Price of the product in the store"
  price: Float!
  "A brief description about the product"
  description: String!
  "Contains the url of an image about the product"
  image: URL!
  "Stores the product creation date"
  createdAt: String!
  categoryId: ID!
  category: Category!
}

type Category {
  id: ID!
  name: CategoryNameType!
  image: URL!
  products: [Product!]!
}

type AuthResponse {
  access_token: String!
  user: User!
}

type User {
  id: ID!
  email: EmailAddress!
  role: String!
  createdAt: String!
}

type Mutation {
  "Allows to create a new product in the store using Graphql"
  addProduct(dto: CreateProductDto!): Product
  login(email: EmailAddress!, password: String!):AuthResponse
  updateProduct(id: ID!, dto: UpdateProductDto!): Product
  deleteProduct(id: ID!): ID
  addCategory(dto: CreateCategoryDto!): Category
}

input CreateCategoryDto {
  name: CategoryNameType!
  image: URL!
}

input CreateProductDto {
  name: String!
  price: Float!
  description: String!
  image: URL!
  categoryId: ID!
}

input UpdateProductDto {
  name: String
  price: Float
  description: String
  image: String
  categoryId: ID
}
